### YamlMime:UniversalReference
items:
  - uid: Api.Js.SxcJs.CommandParams
    name: CommandParams
    fullName: CommandParams
    children:
      - Api.Js.SxcJs.CommandParams.call
      - Api.Js.SxcJs.CommandParams.contentType
      - Api.Js.SxcJs.CommandParams.entityGuid
      - Api.Js.SxcJs.CommandParams.entityId
      - Api.Js.SxcJs.CommandParams.entityTitle
      - Api.Js.SxcJs.CommandParams.fields
      - Api.Js.SxcJs.CommandParams.filters
      - Api.Js.SxcJs.CommandParams.index
      - Api.Js.SxcJs.CommandParams.metadata
      - Api.Js.SxcJs.CommandParams.parent
      - Api.Js.SxcJs.CommandParams.prefill
      - Api.Js.SxcJs.CommandParams.title
      - Api.Js.SxcJs.CommandParams.useModuleList
    langs:
      - typeScript
    type: interface
    summary: >-
      Command parameters are handed over to a command for execution.

      It contains all possible combinations of parameters that can be used in a
      command.

      We will try to improve how this is documented, but ATM it just has all
      parameters,

      even though you may need none, or just a few.


      _Note: For your specific commands, you can also pass other parameters._


      **Important for the docs**


      Most properties are actually not visible (you will get them in the types
      though).

      So actually you will usually create one of these:

      * [](xref:Api.Js.SxcJs.CommandParamsEntityById)

      * [](xref:Api.Js.SxcJs.CommandParamsEntityInContentBlock)

      * [](xref:Api.Js.SxcJs.CommandParamsEntityInList)

      * [](xref:Api.Js.SxcJs.CommandAddParams)

      * [](xref:Api.Js.SxcJs.CommandAddExistingParams)

      * [](xref:Api.Js.SxcJs.CommandDataParams)

      * [](xref:Api.Js.SxcJs.CommandCopyParams)

      * [](xref:Api.Js.SxcJs.CommandCodeParams)

      * [](xref:Api.Js.SxcJs.CommandDeleteParams)

      * [](xref:Api.Js.SxcJs.CommandMetadataParams)

      * [](xref:Api.Js.SxcJs.CommandNewParams)


      Because of this, most of the properties below are NOT documented, as their
      purpose can change depending on the command used.
    extends:
      name: Object
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.CommandParams.call
    name: call
    fullName: call
    children: []
    langs:
      - typeScript
    type: property
    summary: 'The purpose of this varies by [Command](xref:Api.Js.SxcJs.CommandNames).'
    optional: true
    syntax:
      content: 'public call?: string'
      return:
        type:
          - string
        description: ''
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.CommandParams.contentType
    name: contentType
    fullName: contentType
    children: []
    langs:
      - typeScript
    type: property
    summary: 'The purpose of this varies by [Command](xref:Api.Js.SxcJs.CommandNames).'
    optional: true
    syntax:
      content: 'public contentType?: string'
      return:
        type:
          - string
        description: ''
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.CommandParams.entityGuid
    name: entityGuid
    fullName: entityGuid
    children: []
    langs:
      - typeScript
    type: property
    summary: 'The purpose of this varies by [Command](xref:Api.Js.SxcJs.CommandNames).'
    optional: true
    syntax:
      content: 'public entityGuid?: string'
      return:
        type:
          - string
        description: ''
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.CommandParams.entityId
    name: entityId
    fullName: entityId
    children: []
    langs:
      - typeScript
    type: property
    summary: 'The purpose of this varies by [Command](xref:Api.Js.SxcJs.CommandNames).'
    optional: true
    syntax:
      content: 'public entityId?: number'
      return:
        type:
          - number
        description: ''
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.CommandParams.entityTitle
    name: entityTitle
    fullName: entityTitle
    children: []
    langs:
      - typeScript
    type: property
    summary: 'The purpose of this varies by [Command](xref:Api.Js.SxcJs.CommandNames).'
    optional: true
    syntax:
      content: 'public entityTitle?: string'
      return:
        type:
          - string
        description: ''
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.CommandParams.fields
    name: fields
    fullName: fields
    children: []
    langs:
      - typeScript
    type: property
    summary: 'The purpose of this varies by [Command](xref:Api.Js.SxcJs.CommandNames).'
    optional: true
    syntax:
      content: 'public fields?: string'
      return:
        type:
          - string
        description: ''
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.CommandParams.filters
    name: filters
    fullName: filters
    children: []
    langs:
      - typeScript
    type: property
    summary: 'The purpose of this varies by [Command](xref:Api.Js.SxcJs.CommandNames).'
    optional: true
    syntax:
      content: 'public filters?: string'
      return:
        type:
          - string
        description: ''
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.CommandParams.index
    name: index
    fullName: index
    children: []
    langs:
      - typeScript
    type: property
    summary: 'The purpose of this varies by [Command](xref:Api.Js.SxcJs.CommandNames).'
    optional: true
    syntax:
      content: 'public index?: number'
      return:
        type:
          - number
        description: ''
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.CommandParams.metadata
    name: metadata
    fullName: metadata
    children: []
    langs:
      - typeScript
    type: property
    summary: 'The purpose of this varies by [Command](xref:Api.Js.SxcJs.CommandNames).'
    optional: true
    syntax:
      content: 'public metadata?: CommandParamsMetadata'
      return:
        type:
          - Api.Js.SxcJs.CommandParamsMetadata
        description: ''
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.CommandParams.parent
    name: parent
    fullName: parent
    children: []
    langs:
      - typeScript
    type: property
    summary: 'The purpose of this varies by [Command](xref:Api.Js.SxcJs.CommandNames).'
    optional: true
    syntax:
      content: 'public parent?: string'
      return:
        type:
          - string
        description: ''
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.CommandParams.prefill
    name: prefill
    fullName: prefill
    children: []
    langs:
      - typeScript
    type: property
    summary: 'The purpose of this varies by [Command](xref:Api.Js.SxcJs.CommandNames).'
    optional: true
    syntax:
      content: 'public prefill?: Record<string, boolean | string | number | Date>'
      return:
        type:
          - 'Record<string, boolean | string | number | Date>'
        description: ''
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.CommandParams.title
    name: title
    fullName: title
    children: []
    langs:
      - typeScript
    type: property
    summary: 'The purpose of this varies by [Command](xref:Api.Js.SxcJs.CommandNames).'
    optional: true
    syntax:
      content: 'public title?: string'
      return:
        type:
          - string
        description: ''
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.CommandParams.useModuleList
    name: useModuleList
    fullName: useModuleList
    children: []
    langs:
      - typeScript
    type: property
    summary: 'The purpose of this varies by [Command](xref:Api.Js.SxcJs.CommandNames).'
    optional: true
    syntax:
      content: 'public useModuleList?: true'
      return:
        type:
          - 'true'
        description: ''
    package: Api.Js.SxcJs
references:
  - uid: Api.Js.SxcJs.CommandParamsMetadata
    name: CommandParamsMetadata
    spec.typeScript:
      - name: CommandParamsMetadata
        fullName: CommandParamsMetadata
        uid: Api.Js.SxcJs.CommandParamsMetadata
