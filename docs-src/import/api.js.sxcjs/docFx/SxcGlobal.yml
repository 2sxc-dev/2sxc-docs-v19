### YamlMime:UniversalReference
items:
  - uid: Api.Js.SxcJs.SxcGlobal
    name: SxcGlobal
    fullName: SxcGlobal
    children:
      - Api.Js.SxcJs.SxcGlobal.env
      - Api.Js.SxcJs.SxcGlobal.get_3
      - Api.Js.SxcJs.SxcGlobal.get_2
      - Api.Js.SxcJs.SxcGlobal.get
      - Api.Js.SxcJs.SxcGlobal.get_1
      - Api.Js.SxcJs.SxcGlobal.get_4
      - Api.Js.SxcJs.SxcGlobal.http
      - Api.Js.SxcJs.SxcGlobal.insights
      - Api.Js.SxcJs.SxcGlobal.sysinfo
      - Api.Js.SxcJs.SxcGlobal.urlParams
    langs:
      - typeScript
    type: interface
    summary: >-
      This is the root global `window.$2sxc` function / object.

      It is both a function `window.$2sxc(...)` and object
      `window.$2sxc.insights...`


      If the page feature `2sxc.JsCms` is enabled, the `window.$2sxc` will also
      be a [SxcGlobalWithCms](xref:Api.Js.SxcJs.SxcGlobalWithCms)
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.SxcGlobal.env
    name: env
    fullName: env
    children: []
    langs:
      - typeScript
    type: property
    summary: Environment information
    syntax:
      content: 'env: SxcGlobalEnvironment'
      return:
        type:
          - Api.Js.SxcJs.SxcGlobalEnvironment
        description: ''
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.SxcGlobal.get_3
    name: get(ContextIdentifier)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get an Sxc Instance using a full context-identifier (advanced). Using
      `$2sxc.get(...)` is the same as using `$2sxc(...)`
    syntax:
      content: 'function get(context: ContextIdentifier)'
      parameters:
        - id: context
          type:
            - Api.Js.SxcJs.ContextIdentifier
          description: 'ContextIdentifier: full context identifier'
      return:
        type:
          - Api.Js.SxcJs.Sxc
        description: Sxc
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.SxcGlobal.get_2
    name: get(HTMLElement)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get an Sxc Instance using a tag / `HtmlElement`. Using `$2sxc.get(...)` is
      the same as using `$2sxc(...)`
    syntax:
      content: 'function get(tag: HTMLElement)'
      parameters:
        - id: tag
          type:
            - HTMLElement
          description: 'HTMLElement: tag in the page'
      return:
        type:
          - Api.Js.SxcJs.Sxc
        description: Sxc
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.SxcGlobal.get
    name: get(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Get an Sxc Instance using the moduleId.
      Using `$2sxc.get(...)` is the same as using `$2sxc(...)`
    syntax:
      content: 'function get(moduleId: number)'
      parameters:
        - id: moduleId
          type:
            - number
          description: 'number: moduleId'
      return:
        type:
          - Api.Js.SxcJs.Sxc
        description: SxcInstance
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.SxcGlobal.get_1
    name: 'get(number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Get an Sxc Instance using the moduleId and contentBlockId.
      Using `$2sxc.get(...)` is the same as using `$2sxc(...)`
    syntax:
      content: 'function get(moduleId: number, contentBlockId: number)'
      parameters:
        - id: moduleId
          type:
            - number
          description: 'number: moduleId'
        - id: contentBlockId
          type:
            - number
          description: 'number: content-block ID'
      return:
        type:
          - Api.Js.SxcJs.Sxc
        description: Sxc
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.SxcGlobal.get_4
    name: get(Sxc)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Get an Sxc Instance passing in an existing Sxc - just for cases where
      you're not sure what you aready have. Using `$2sxc.get(...)` is the same
      as using `$2sxc(...)`
    syntax:
      content: 'function get(sxc: Sxc)'
      parameters:
        - id: sxc
          type:
            - Api.Js.SxcJs.Sxc
          description: 'Sxc: an existing sxc - will just be returned'
      return:
        type:
          - Api.Js.SxcJs.Sxc
        description: Sxc - the same Sxc as the one which was passed in
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.SxcGlobal.http
    name: http
    fullName: http
    children: []
    langs:
      - typeScript
    type: property
    summary: Http helper for API calls and such
    syntax:
      content: 'http: SxcGlobalHttp'
      return:
        type:
          - Api.Js.SxcJs.SxcGlobalHttp
        description: ''
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.SxcGlobal.insights
    name: 'insights(string, number, number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      The debugging / insights system.

      Call the `$2sxc.insights()` without parameters to get instructions what
      the parameters could be.
    syntax:
      content: >-
        function insights(partName: string, index?: number, start?: number,
        length?: number)
      parameters:
        - id: partName
          type:
            - string
          description: >-
            optional name of a part of the system for which we want to see the
            logs
        - id: index
          type:
            - number
          description: optional index on that part for which log we want to see
          optional: true
        - id: start
          type:
            - number
          description: >-
            log start index - this is to skip the first few lines if there are
            too many
          optional: true
        - id: length
          type:
            - number
          description: |
            amount of lines to show - in some cases will default to 25
          optional: true
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.SxcGlobal.sysinfo
    name: sysinfo
    fullName: sysinfo
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      system information, mainly for checking which version of 2sxc is running
      note: it's not always updated reliably, but it helps when debugging
    syntax:
      content: 'sysinfo: Object'
      return:
        type:
          - Object
        description: ''
    package: Api.Js.SxcJs
  - uid: Api.Js.SxcJs.SxcGlobal.urlParams
    name: urlParams
    fullName: urlParams
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Helper to work with url parameters behind ? or #'
    syntax:
      content: 'urlParams: UrlParams'
      return:
        type:
          - Api.Js.SxcJs.UrlParams
        description: ''
    package: Api.Js.SxcJs
references:
  - uid: Api.Js.SxcJs.SxcGlobalEnvironment
    name: SxcGlobalEnvironment
    spec.typeScript:
      - name: SxcGlobalEnvironment
        fullName: SxcGlobalEnvironment
        uid: Api.Js.SxcJs.SxcGlobalEnvironment
  - uid: Api.Js.SxcJs.SxcGlobalHttp
    name: SxcGlobalHttp
    spec.typeScript:
      - name: SxcGlobalHttp
        fullName: SxcGlobalHttp
        uid: Api.Js.SxcJs.SxcGlobalHttp
  - uid: Api.Js.SxcJs.UrlParams
    name: UrlParams
    spec.typeScript:
      - name: UrlParams
        fullName: UrlParams
        uid: Api.Js.SxcJs.UrlParams
  - uid: Api.Js.SxcJs.Sxc
    name: Sxc
    spec.typeScript:
      - name: Sxc
        fullName: Sxc
        uid: Api.Js.SxcJs.Sxc
  - uid: Api.Js.SxcJs.ContextIdentifier
    name: ContextIdentifier
    spec.typeScript:
      - name: ContextIdentifier
        fullName: ContextIdentifier
        uid: Api.Js.SxcJs.ContextIdentifier
